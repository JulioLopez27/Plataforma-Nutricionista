Breve descripción de: instalacion, ejecucion y la estructura del proyecto.

-Para ejecutarlo localmente, tienen que tener instalado las dependencias que existen en el proyecto pero no estan subidas en el repo.
Para eso van a tener que ejecutar un nuevo terminal con la direccion del proyecto y por ultimo ingresar a la carpeta web.
Se usa el comando "cd" en la terminal para mover entre carpetas, [cd ..] para retroceder un nivel de carpeta / [ cd web] para ingresar a la 
carpeta web.

-Al estar dentro de la carpeta web, ejecuten el comando " npm install" para descargar todas las dependencias necesarias.

-Para probar el proyecto, seguir ubicado en la carpeta web, ejecutar el comando " npm run dev " para ejecutar el servidor
integrado en Vite, en la consola les va a proporcionar una url para acceder desde el navegador [localhost].

-En el archivo tailwind.config.js está la configuración para los colores a utilizar propios de chefDigitales + los colores que vienen
con tailwindcss, se puede ampliar digo catalogo y modificar tamaño de tipografía y más.

-El archivo " index.html " es la puerta de entrada para que funcione el proyecto ya que se declara una tag root dentro del body 
para mostrar todo el contenido que se visualizara a futuro por la llamada del script que se encuentra dentro de 
    body en la direccion src/main.jsx.

--el archivo global.css sirve para dar estilizar componente en todo el proyecto.
    Se puede usar @apply dentro de alguna clase para acceder a los estilos de tailwindcss y que afecte a lo que necesitemos.
    Ej: que el color de las letras del body sean rojas.
        body{
            @apply text-red-800;
        }

-En el archivo main.jsx se encuentra los imports de las rutas de dirección para moverse entre las distintas páginas del proyecto cuando está siendo usado localmente junto 
con el archivo global.css.
Cuenta con la utilización de <Route/> para poder dirigir a las distintas rutas de páginas existentes en el proyecto.

-Contamos con la carpeta " pages " en la direccion src/pages que contiene las distintas páginas del proyecto dentro de las carpetas: Home,Signup y Dashboard
las cuales corresponden a: Home/index.jsx -> pantalla inicial para login/ registro
                            Signup/index.jsx-> pantalla para registrarse
                            Dashboard/index.jsx -> pantalla principal luego de ingresar al sistema.

**OBS: en la carpeta " pages " existe un archivo index.jsx que sirve como rooteador, hace los imports de las paginas para luego usarlas
dentro de la variale " router ". 
Ej: {
    path: "/", -> camino a ver en la barra del navegador. 
    element: <Home />, -> elemento importado (function) de la direccion " './Home' " 
  }

En la pantalla Home, existe dos posibilidades de acción, ingresar al sistema o registrarse en él.
Lo cual enviará al futuro usuario de la app a su página principal o a la página de registro.

-Existe la carpeta " components " que contiene y contendrá todo los componentes para armar las paginas de la plataforma junto con un archivo 
index.jsx que actua como exportador del contenido anteriormente mencionado

-La carpeta assets contendra todo contenido visual necesario para complementar a la estructura front-end del proyecto.

PD: Gabriel si llegaste hasta acá, se que hay faltas de ortografía, estoy terminando esta documentación a la 1am y 
bastante ido(mi compa de cuarto legalizo uno acá).
